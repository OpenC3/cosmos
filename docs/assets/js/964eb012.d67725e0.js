"use strict";(self.webpackChunkdocs_openc3_com=self.webpackChunkdocs_openc3_com||[]).push([["2669"],{5309:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,default:()=>p,toc:()=>l,metadata:()=>s,assets:()=>c,contentTitle:()=>a});var s=JSON.parse('{"id":"getting-started/cli","title":"Command Line Interface","description":"Using openc3.sh","source":"@site/docs/getting-started/cli.md","sourceDirName":"getting-started","slug":"/getting-started/cli","permalink":"/docs/getting-started/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenC3/cosmos/tree/main/docs.openc3.com/docs/getting-started/cli.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Command Line Interface","description":"Using openc3.sh","sidebar_custom_props":{"myEmoji":"\u2328\uFE0F"}},"sidebar":"defaultSidebar","previous":{"title":"Upgrading","permalink":"/docs/getting-started/upgrading"},"next":{"title":"Code Generators","permalink":"/docs/getting-started/generators"}}'),i=t(5893),r=t(65);let o={sidebar_position:5,title:"Command Line Interface",description:"Using openc3.sh",sidebar_custom_props:{myEmoji:"\u2328\uFE0F"}},a=void 0,c={},l=[{value:"Rake",id:"rake",level:2},{value:"IRB",id:"irb",level:2},{value:"Script",id:"script",level:2},{value:"Init (Enterprise Only since 6.3.0)",id:"init-enterprise-only-since-630",level:3},{value:"List",id:"list",level:3},{value:"Spawn",id:"spawn",level:3},{value:"Run",id:"run",level:3},{value:"Running (since 6.5.0)",id:"running-since-650",level:3},{value:"Status (since 6.5.0)",id:"status-since-650",level:3},{value:"Stop (since 6.5.0)",id:"stop-since-650",level:3},{value:"Validate",id:"validate",level:2},{value:"Load",id:"load",level:2},{value:"List",id:"list-1",level:2},{value:"Generate",id:"generate",level:2},{value:"Bridge",id:"bridge",level:2},{value:"Pkginstall and pkguninstall",id:"pkginstall-and-pkguninstall",level:2},{value:"Rubysloc (deprecated)",id:"rubysloc-deprecated",level:2},{value:"XTCE Converter",id:"xtce-converter",level:2},{value:"CSTOL Converter",id:"cstol-converter",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The COSMOS Command Line Interface is ",(0,i.jsx)(n.code,{children:"openc3.sh"})," and ",(0,i.jsx)(n.code,{children:"openc3.bat"})," which are included in the COSMOS ",(0,i.jsx)(n.a,{href:"https://github.com/OpenC3/cosmos-project",children:"project"})," (more about ",(0,i.jsx)(n.a,{href:"key-concepts#projects",children:"projects"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["If you followed the ",(0,i.jsx)(n.a,{href:"/docs/getting-started/installation",children:"Installation Guide"})," you should already be inside a cloned ",(0,i.jsx)(n.a,{href:"https://github.com/OpenC3/cosmos-project",children:"openc3-project"})," which is in your PATH (necessary for openc3.bat / openc3.sh to be resolved). To see all the available type the following:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli\nUsage:\n  cli help                          # Displays this information\n  cli rake                          # Runs rake in the local directory\n  cli irb                           # Runs irb in the local directory\n  cli script                        # Interact with scripts. Run with --help for more info.\n  cli validate /PATH/FILENAME.gem SCOPE variables.txt # Validate a COSMOS plugin gem file\n  cli load /PATH/FILENAME.gem SCOPE variables.txt     # Loads a COSMOS plugin gem file\n  cli list <SCOPE>                  # Lists installed plugins, SCOPE is DEFAULT if not given\n  cli generate TYPE OPTIONS         # Generate various COSMOS entities\n    OPTIONS: --ruby or --python is required to specify the language in the generated code unless OPENC3_LANGUAGE is set\n  cli bridge CONFIG_FILENAME        # Run COSMOS host bridge\n  cli bridgegem gem_name variable1=value1 variable2=value2 # Runs bridge using gem bridge.txt\n  cli bridgesetup CONFIG_FILENAME   # Create a default config file\n  cli pkginstall PKGFILENAME SCOPE  # Install loaded package (Ruby gem or python package)\n  cli pkguninstall PKGFILENAME SCOPE  # Uninstall loaded package (Ruby gem or python package)\n  cli rubysloc                      # DEPRECATED: Please use scc (https://github.com/boyter/scc)\n  cli xtce_converter                # Convert to and from the XTCE format. Run with --help for more info.\n  cli cstol_converter               # Converts CSTOL files (.prc) to COSMOS. Run with --help for more info.\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"seccomp profile",type:"note",children:(0,i.jsxs)(n.p,{children:["You can safely ignore ",(0,i.jsx)(n.code,{children:"WARNING: daemon is not using the default seccomp profile"})]})}),"\n",(0,i.jsx)(n.h2,{id:"rake",children:"Rake"}),"\n",(0,i.jsxs)(n.p,{children:["You can execute rake tasks using ",(0,i.jsx)(n.code,{children:"openc3.sh cli rake"}),". The most typical usage is to generate a plugin and then build it. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli rake build VERSION=1.0.0\n"})}),"\n",(0,i.jsx)(n.h2,{id:"irb",children:"IRB"}),"\n",(0,i.jsxs)(n.p,{children:["IRB stands for Interactive Ruby and is a way to start a Ruby interpreter that you can play around with. When using it from the CLI, it includes the COSMOS Ruby path so you can ",(0,i.jsx)(n.code,{children:"require 'cosmos'"})," and try out various methods. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'% openc3.sh cli irb\nirb(main):001:0> require \'cosmos\'\n=> true\nirb(main):002:0> Cosmos::Api::WHITELIST\n=>\n["get_interface",\n "get_interface_names",\n ...\n]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"script",children:"Script"}),"\n",(0,i.jsx)(n.p,{children:"The script methods allow you to list the available scripts, spawn a script, and run a script while monitoring its output. Note that you must set the OPENC3_API_PASSWORD in COSMOS Core and both the OPENC3_API_USER and OPENC3_API_PASSWORD in COSMOS Enterprise."}),"\n",(0,i.jsx)(n.admonition,{title:"Offline Access Token (since 6.3.0)",type:"note",children:(0,i.jsx)(n.p,{children:'You must visit the frontend Script Runner page as the OPENC3_API_USER or run "openc3.sh cli script init" in order to obtain an offline access token before the other script cli methods will work.'})}),"\n",(0,i.jsx)(n.h3,{id:"init-enterprise-only-since-630",children:"Init (Enterprise Only since 6.3.0)"}),"\n",(0,i.jsx)(n.p,{children:"Obtain an offline access token without visiting the frontend GUI. This is required when running in a headless CI/CD environment before accessing any of the other commands."}),"\n",(0,i.jsx)(n.h3,{id:"list",children:"List"}),"\n",(0,i.jsx)(n.p,{children:"List all the available scripts which includes all the files in every target directory. You can filter this list using bash to only include procedures, Ruby files, Python files, etc."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% export OPENC3_API_USER=operator\n% export OPENC3_API_PASSWORD=operator\n% openc3.sh cli script list\nEXAMPLE/cmd_tlm/example_cmds.txt\nEXAMPLE/cmd_tlm/example_tlm.txt\n...\n"})}),"\n",(0,i.jsx)(n.h3,{id:"spawn",children:"Spawn"}),"\n",(0,i.jsxs)(n.p,{children:["The ID of the spawned script is returned. You can connect to it in Script Runner by visiting ",(0,i.jsx)(n.code,{children:"http://localhost:2900/tools/scriptrunner/1"})," where the final value is the ID."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli script spawn INST/procedures/checks.rb\n4\n"})}),"\n",(0,i.jsx)(n.h3,{id:"run",children:"Run"}),"\n",(0,i.jsx)(n.p,{children:"Run spawns the script and then captures the output and prints it to the shell. Note that this will not work with user input prompts so the script must be written to prevent user input. You can also pass variables to the script as shown in the CLI help."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'% openc3.sh cli script run INST/procedures/stash.rb\nFilename INST/procedures/stash.rb scope DEFAULT\n2025/03/22 19:50:40.429 (SCRIPTRUNNER): Script config/DEFAULT/targets/INST/procedures/stash.rb spawned in 0.796683293 seconds <ruby 3.2.6>\n2025/03/22 19:50:40.453 (SCRIPTRUNNER): Starting script: stash.rb, line_delay = 0.1\nAt [INST/procedures/stash.rb:3] state [running]\nAt [INST/procedures/stash.rb:4] state [running]\n2025/03/22 19:50:40.732 (stash.rb:4): key1: val1\nAt [INST/procedures/stash.rb:5] state [running]\nAt [INST/procedures/stash.rb:6] state [running]\n2025/03/22 19:50:40.936 (stash.rb:6): key2: val2\nAt [INST/procedures/stash.rb:7] state [running]\n2025/03/22 19:50:41.039 (stash.rb:7): CHECK: \'val1\' == \'val1\' is TRUE\nAt [INST/procedures/stash.rb:8] state [running]\n2025/03/22 19:50:41.146 (stash.rb:8): CHECK: \'val2\' == \'val2\' is TRUE\nAt [INST/procedures/stash.rb:9] state [running]\n2025/03/22 19:50:41.256 (stash.rb:9): CHECK: \'["key1", "key2"]\' == \'["key1", "key2"]\' is TRUE\nAt [INST/procedures/stash.rb:10] state [running]\nAt [INST/procedures/stash.rb:11] state [running]\nAt [INST/procedures/stash.rb:12] state [running]\n2025/03/22 19:50:41.556 (stash.rb:12): CHECK: \'{"key1"=>1, "key2"=>2}\' == \'{"key1"=>1, "key2"=>2}\' is TRUE\nAt [INST/procedures/stash.rb:13] state [running]\nAt [INST/procedures/stash.rb:14] state [running]\n2025/03/22 19:50:41.763 (stash.rb:14): CHECK: true == true is TRUE\nAt [INST/procedures/stash.rb:15] state [running]\nAt [INST/procedures/stash.rb:16] state [running]\nAt [INST/procedures/stash.rb:17] state [running]\nAt [INST/procedures/stash.rb:18] state [running]\n2025/03/22 19:50:42.176 (stash.rb:18): CHECK: \'[1, 2, [3, 4]]\' == \'[1, 2, [3, 4]]\' is TRUE\nAt [INST/procedures/stash.rb:19] state [running]\nAt [INST/procedures/stash.rb:21] state [running]\nAt [INST/procedures/stash.rb:22] state [running]\nAt [INST/procedures/stash.rb:23] state [running]\n2025/03/22 19:50:42.587 (stash.rb:23): CHECK: \'{"one"=>1, "two"=>2, "string"=>"string"}\' == \'{"one"=>1, "two"=>2, "string"=>"string"}\' is TRUE\nAt [INST/procedures/stash.rb:24] state [running]\n2025/03/22 19:50:42.697 (SCRIPTRUNNER): Script completed: stash.rb\nAt [INST/procedures/stash.rb:0] state [stopped]\nscript complete\n%\n'})}),"\n",(0,i.jsx)(n.h3,{id:"running-since-650",children:"Running (since 6.5.0)"}),"\n",(0,i.jsx)(n.p,{children:"List all the running scripts. Add the --verbose option to print the raw output."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli script running\nID    User                 Filename                       Start Time             State\n5     The Operator         INST/procedures/collect.rb     2025-06-06T22:40:48Z   paused\n4     The Operator         INST/procedures/checks.rb      2025-06-06T22:40:21Z   error\n"})}),"\n",(0,i.jsx)(n.h3,{id:"status-since-650",children:"Status (since 6.5.0)"}),"\n",(0,i.jsx)(n.p,{children:"List status for a specific script based on the script ID. Add the --verbose option to print the raw output."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli script status 5\nID    User                 Filename                       Start Time             State\n5     The Operator         INST/procedures/collect.rb     2025-06-06T22:40:48Z   paused\n"})}),"\n",(0,i.jsx)(n.h3,{id:"stop-since-650",children:"Stop (since 6.5.0)"}),"\n",(0,i.jsx)(n.p,{children:"Stop a script based on the script ID."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli script stop 5\n"})}),"\n",(0,i.jsx)(n.h2,{id:"validate",children:"Validate"}),"\n",(0,i.jsx)(n.p,{children:"Validate is used to validate built COSMOS plugins. It walks through the installation process without actually installing the plugin."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli validate openc3-cosmos-cfdp-1.0.0.gem\nInstalling openc3-cosmos-cfdp-1.0.0.gem\nSuccessfully validated openc3-cosmos-cfdp-1.0.0.gem\n"})}),"\n",(0,i.jsx)(n.h2,{id:"load",children:"Load"}),"\n",(0,i.jsx)(n.p,{children:"Load can load a plugin into COSMOS without using the GUI. This is useful for scripts or CI/CD pipelines."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'% openc3.sh cli load openc3-cosmos-cfdp-1.0.0.gem\nLoading new plugin: openc3-cosmos-cfdp-1.0.0.gem\n{"name"=>"openc3-cosmos-cfdp-1.0.0.gem", "variables"=>{"cfdp_microservice_name"=>"CFDP", "cfdp_route_prefix"=>"/cfdp", "cfdp_port"=>"2905", "cfdp_cmd_target_name"=>"CFDP2", "cfdp_cmd_packet_name"=>"CFDP_PDU", "cfdp_cmd_item_name"=>"PDU", "cfdp_tlm_target_name"=>"CFDP2", "cfdp_tlm_packet_name"=>"CFDP_PDU", "cfdp_tlm_item_name"=>"PDU", "source_entity_id"=>"1", "destination_entity_id"=>"2", "root_path"=>"/DEFAULT/targets_modified/CFDP/tmp", "bucket"=>"config", "plugin_test_mode"=>"false"}, "plugin_txt_lines"=>["VARIABLE cfdp_microservice_name CFDP", "VARIABLE cfdp_route_prefix /cfdp", "VARIABLE cfdp_port 2905", "", "VARIABLE cfdp_cmd_target_name CFDP2", "VARIABLE cfdp_cmd_packet_name CFDP_PDU", "VARIABLE cfdp_cmd_item_name PDU", "", "VARIABLE cfdp_tlm_target_name CFDP2", "VARIABLE cfdp_tlm_packet_name CFDP_PDU", "VARIABLE cfdp_tlm_item_name PDU", "", "VARIABLE source_entity_id 1", "VARIABLE destination_entity_id 2", "VARIABLE root_path /DEFAULT/targets_modified/CFDP/tmp", "VARIABLE bucket config", "", "# Set to true to enable a test configuration", "VARIABLE plugin_test_mode \\"false\\"", "", "MICROSERVICE CFDP <%= cfdp_microservice_name %>", "  WORK_DIR .", "  ROUTE_PREFIX <%= cfdp_route_prefix %>", "  ENV OPENC3_ROUTE_PREFIX <%= cfdp_route_prefix %>", "  ENV SECRET_KEY_BASE 324973597349867207430793759437697498769349867349674", "  PORT <%= cfdp_port %>", "  CMD rails s -b 0.0.0.0 -p <%= cfdp_port %> -e production", "  # MIB Options Follow -", "  # You will need to modify these for your mission", "  OPTION source_entity_id <%= source_entity_id %>", "  OPTION tlm_info <%= cfdp_tlm_target_name %> <%= cfdp_tlm_packet_name %> <%= cfdp_tlm_item_name %>", "  OPTION destination_entity_id <%= destination_entity_id %>", "  OPTION cmd_info <%= cfdp_cmd_target_name %> <%= cfdp_cmd_packet_name %> <%= cfdp_cmd_item_name %>", "  OPTION root_path <%= root_path %>", "  <% if bucket.to_s.strip != \'\' %>", "    OPTION bucket <%= bucket %>", "  <% end %>", "", "<% include_test = (plugin_test_mode.to_s.strip.downcase == \\"true\\") %>", "<% if include_test %>", "  TARGET CFDPTEST CFDP", "  TARGET CFDPTEST CFDP2", "", "  MICROSERVICE CFDP CFDP2", "    WORK_DIR .", "    ROUTE_PREFIX /cfdp2", "    ENV OPENC3_ROUTE_PREFIX /cfdp2", "    ENV SECRET_KEY_BASE 324973597349867207430793759437697498769349867349674", "    PORT 2906", "    CMD rails s -b 0.0.0.0 -p 2906 -e production", "    OPTION source_entity_id <%= destination_entity_id %>", "    OPTION tlm_info CFDP CFDP_PDU PDU", "    OPTION destination_entity_id <%= source_entity_id %>", "    OPTION cmd_info CFDP CFDP_PDU PDU", "    OPTION root_path <%= root_path %>", "    <% if bucket.to_s.strip != \'\' %>", "      OPTION bucket <%= bucket %>", "    <% end %>", "", "  <% test_host = ENV[\'KUBERNETES_SERVICE_HOST\'] ? (scope.to_s.downcase + \\"-interface-cfdp2-int-service\\") : \\"openc3-operator\\" %>", "  INTERFACE CFDP_INT tcpip_client_interface.rb <%= test_host %> 2907 2907 10.0 nil LENGTH 0 32 4 1 BIG_ENDIAN 0 nil nil true", "    MAP_TARGET CFDP", "", "  INTERFACE CFDP2_INT tcpip_server_interface.rb 2907 2907 10.0 nil LENGTH 0 32 4 1 BIG_ENDIAN 0 nil nil true", "    PORT 2907", "    MAP_TARGET CFDP2", "<% end %>"], "needs_dependencies"=>false, "updated_at"=>nil}\nUpdating local plugin files: /plugins/DEFAULT/openc3-cosmos-cfdp\n'})}),"\n",(0,i.jsx)(n.h2,{id:"list-1",children:"List"}),"\n",(0,i.jsx)(n.p,{children:"List displays all the installed plugins."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli list\nopenc3-cosmos-cfdp-1.0.0.gem__20250325160956\nopenc3-cosmos-demo-6.2.2.pre.beta0.20250325143120.gem__20250325160201\nopenc3-cosmos-enterprise-tool-admin-6.2.2.pre.beta0.20250325155648.gem__20250325160159\nopenc3-cosmos-tool-autonomic-6.2.2.pre.beta0.20250325155658.gem__20250325160225\nopenc3-cosmos-tool-bucketexplorer-6.2.2.pre.beta0.20250325143107.gem__20250325160227\nopenc3-cosmos-tool-calendar-6.2.2.pre.beta0.20250325155654.gem__20250325160224\nopenc3-cosmos-tool-cmdhistory-6.2.2.pre.beta0.20250325155651.gem__20250325160212\nopenc3-cosmos-tool-cmdsender-6.2.2.pre.beta0.20250325143111.gem__20250325160211\nopenc3-cosmos-tool-cmdtlmserver-6.2.2.pre.beta0.20250325143114.gem__20250325160208\nopenc3-cosmos-tool-dataextractor-6.2.2.pre.beta0.20250325143104.gem__20250325160219\nopenc3-cosmos-tool-dataviewer-6.2.2.pre.beta0.20250325143108.gem__20250325160220\nopenc3-cosmos-tool-docs-6.2.2.pre.beta0.20250325155535.gem__20250325160228\nopenc3-cosmos-tool-grafana-6.2.2.pre.beta0.20250325155658.gem__20250325160233\nopenc3-cosmos-tool-handbooks-6.2.2.pre.beta0.20250325143113.gem__20250325160222\nopenc3-cosmos-tool-iframe-6.2.2.pre.beta0.20250325143110.gem__20250325160158\nopenc3-cosmos-tool-limitsmonitor-6.2.2.pre.beta0.20250325155448.gem__20250325160209\nopenc3-cosmos-tool-packetviewer-6.2.2.pre.beta0.20250325143104.gem__20250325160215\nopenc3-cosmos-tool-scriptrunner-6.2.2.pre.beta0.20250325143111.gem__20250325160214\nopenc3-cosmos-tool-tablemanager-6.2.2.pre.beta0.20250325143116.gem__20250325160223\nopenc3-cosmos-tool-tlmgrapher-6.2.2.pre.beta0.20250325143105.gem__20250325160218\nopenc3-cosmos-tool-tlmviewer-6.2.2.pre.beta0.20250325143108.gem__20250325160216\nopenc3-enterprise-tool-base-6.2.2.pre.beta0.20250325155704.gem__20250325160153\n"})}),"\n",(0,i.jsx)(n.h2,{id:"generate",children:"Generate"}),"\n",(0,i.jsxs)(n.p,{children:["Generate is used to scaffold new COSMOS plugins, targets, conversions, and more! See the ",(0,i.jsx)(n.a,{href:"/docs/getting-started/generators",children:"Generators"})," page for more information."]}),"\n",(0,i.jsx)(n.h2,{id:"bridge",children:"Bridge"}),"\n",(0,i.jsxs)(n.p,{children:["A COSMOS Bridge is a small application that is run on the local computer to connect to hardware not available to Docker containers. A good example is connecting to a serial port on a non-linux system. See the\n",(0,i.jsx)(n.a,{href:"/docs/guides/bridges",children:"Bridge Guide"})," for more information."]}),"\n",(0,i.jsx)(n.h2,{id:"pkginstall-and-pkguninstall",children:"Pkginstall and pkguninstall"}),"\n",(0,i.jsx)(n.p,{children:"Allows you to install or remove Ruby gems or Python wheels into COSMOS. These are dependencies that are not packaged with the COSMOS plugin itself."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli pkginstall rspec-3.13.0.gem\n"})}),"\n",(0,i.jsx)(n.h2,{id:"rubysloc-deprecated",children:"Rubysloc (deprecated)"}),"\n",(0,i.jsxs)(n.p,{children:["Calculates the Ruby Source Lines of Code (SLOC) from the current directory recursively. We recommend using ",(0,i.jsx)(n.a,{href:"https://github.com/boyter/scc",children:"scc"})," as it works across any programming language, calculates many more statistics, and is blazing fast."]}),"\n",(0,i.jsx)(n.h2,{id:"xtce-converter",children:"XTCE Converter"}),"\n",(0,i.jsx)(n.p,{children:"Converts from the XTCE format to the COSMOS format and also exports XTCE files given a COSMOS plugin."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli xtce_converter\nUsage: xtce_converter [options] --import input_xtce_filename --output output_dir\n       xtce_converter [options] --plugin /PATH/FILENAME.gem --output output_dir --variables variables.txt\n\n    -h, --help                       Show this message\n    -i, --import VALUE               Import the specified .xtce file\n    -o, --output DIRECTORY           Create files in the directory\n    -p, --plugin PLUGIN              Export .xtce file(s) from the plugin\n    -v, --variables                  Optional variables file to pass to the plugin\n"})}),"\n",(0,i.jsx)(n.h2,{id:"cstol-converter",children:"CSTOL Converter"}),"\n",(0,i.jsx)(n.p,{children:"Converts from the Colorado System Test and Operations Language (CSTOL) to a COSMOS Script Runner Ruby script. It currently does not support conversion to Python. Simply run it in the same directory as CSTOL files (*.prc) and it will convert them all."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"% openc3.sh cli cstol_converter\n"})})]})}function p(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65:function(e,n,t){t.d(n,{Z:()=>a,a:()=>o});var s=t(7294);let i={},r=s.createContext(i);function o(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);